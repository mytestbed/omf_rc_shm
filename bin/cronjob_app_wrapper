#!/usr/bin/env ruby

stdout_f, stderr_f, pid_f, timeout, kill_sig, *cmd = *ARGV

pid = Process.spawn(cmd.join(" "), out: [stdout_f, "a"], err: [stderr_f, "a"])

`echo #{pid} >> #{pid_f}`

if timeout && timeout.to_i > 0
  fork do
    sleep timeout.to_i
    Process.kill(kill_sig, pid)
  end
end

p_id, p_status = Process.waitpid2(pid)

if p_status.exitstatus
  `echo Process #{p_id} #{cmd} exited with status: #{p_status.exitstatus} >> #{stderr_f}`
elsif p_status.signaled?
  `echo Process #{p_id} #{cmd} killed by signal: #{p_status.termsig} >> #{stderr_f}`
end
